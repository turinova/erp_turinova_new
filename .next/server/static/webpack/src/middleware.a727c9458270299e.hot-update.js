"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("src/middleware",{

/***/ "(middleware)/./src/middleware.ts":
/*!***************************!*\
  !*** ./src/middleware.ts ***!
  \***************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   config: () => (/* binding */ config),\n/* harmony export */   middleware: () => (/* binding */ middleware)\n/* harmony export */ });\n/* harmony import */ var next_server__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/server */ \"(middleware)/./node_modules/next/dist/esm/api/server.js\");\n/* harmony import */ var _supabase_ssr__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @supabase/ssr */ \"(middleware)/./node_modules/@supabase/ssr/dist/module/index.js\");\n/* harmony import */ var _lib_permissions_server__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @/lib/permissions-server */ \"(middleware)/./src/lib/permissions-server.ts\");\n\n\n\nasync function middleware(req) {\n    // Skip middleware for API routes\n    if (req.nextUrl.pathname.startsWith('/api/')) {\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.next();\n    }\n    // Skip middleware for static files\n    if (req.nextUrl.pathname.startsWith('/_next/static/') || req.nextUrl.pathname.startsWith('/_next/image/') || req.nextUrl.pathname.includes('.') && !req.nextUrl.pathname.includes('/')) {\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.next();\n    }\n    // Performance optimizations\n    const response = next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.next();\n    // Add performance headers\n    response.headers.set('X-DNS-Prefetch-Control', 'on');\n    response.headers.set('X-Content-Type-Options', 'nosniff');\n    response.headers.set('X-Frame-Options', 'DENY');\n    response.headers.set('X-XSS-Protection', '1; mode=block');\n    // Add cache headers for static assets\n    if (req.nextUrl.pathname.startsWith('/_next/static/')) {\n        response.headers.set('Cache-Control', 'public, max-age=31536000, immutable');\n    }\n    // Add cache headers for brand pages\n    if (req.nextUrl.pathname.startsWith('/brands/')) {\n        response.headers.set('Cache-Control', 'public, max-age=60, s-maxage=60');\n    }\n    // Define public routes that don't require authentication\n    const publicRoutes = [\n        '/',\n        '/home',\n        '/login'\n    ];\n    const isPublicRoute = publicRoutes.includes(req.nextUrl.pathname);\n    // Skip authentication for public routes\n    if (isPublicRoute) {\n        console.log('Middleware - Public route:', req.nextUrl.pathname);\n        return response;\n    }\n    // Enable authentication for all other routes\n    const supabase = (0,_supabase_ssr__WEBPACK_IMPORTED_MODULE_1__.createServerClient)(\"https://xgkaviefifbllbmfbyfe.supabase.co\", \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Inhna2F2aWVmaWZibGxibWZieWZlIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTcxNDYxNTEsImV4cCI6MjA3MjcyMjE1MX0.EQFv5-iHscXMhU73oV7f90xmB8g8gr3YJ_-4ROQJ-AY\", {\n        cookies: {\n            getAll () {\n                return req.cookies.getAll();\n            },\n            setAll (cookiesToSet) {\n                cookiesToSet.forEach(({ name, value, options })=>{\n                    req.cookies.set(name, value);\n                    response.cookies.set(name, value, options);\n                });\n            }\n        }\n    });\n    // Try to get session with better error handling\n    let session = null;\n    try {\n        // First try to get session from cookies\n        const { data: { session: sessionData }, error } = await supabase.auth.getSession();\n        if (error) {\n            console.log('Middleware - Session error:', error.message);\n        } else {\n            session = sessionData;\n        }\n        // If no session found, try to get user directly\n        if (!session) {\n            const { data: { user }, error: userError } = await supabase.auth.getUser();\n            if (userError) {\n                console.log('Middleware - User error:', userError.message);\n            } else if (user) {\n                console.log('Middleware - Found user without session:', user.email);\n                // Create a minimal session object\n                session = {\n                    user\n                };\n            }\n        }\n    } catch (error) {\n        console.log('Middleware - Session exception:', error);\n    }\n    console.log('Middleware - Path:', req.nextUrl.pathname, 'Session:', !!session, 'User:', session?.user?.email);\n    console.log('Middleware - Cookies:', req.cookies.getAll().map((c)=>c.name).join(', '));\n    // If user is not signed in and the current path is not /login, redirect to /login\n    if (!session && req.nextUrl.pathname !== '/login') {\n        console.log('Middleware - Redirecting to login (no session)');\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.redirect(new URL('/login', req.url));\n    }\n    // If user is signed in and the current path is /login or /, redirect to /home\n    if (session && (req.nextUrl.pathname === '/login' || req.nextUrl.pathname === '/')) {\n        console.log('Middleware - Redirecting to home (user signed in)');\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.redirect(new URL('/home', req.url));\n    }\n    // Check page permissions for authenticated users\n    if (session && session.user) {\n        try {\n            const hasPermission = await (0,_lib_permissions_server__WEBPACK_IMPORTED_MODULE_2__.hasPagePermission)(session.user.id, req.nextUrl.pathname);\n            if (!hasPermission) {\n                console.log('Middleware - Access denied for:', req.nextUrl.pathname, 'User:', session.user.email);\n                return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.redirect(new URL('/home', req.url));\n            }\n            console.log('Middleware - Access granted for:', req.nextUrl.pathname, 'User:', session.user.email);\n        } catch (error) {\n            console.error('Middleware - Permission check error:', error);\n            // Fail-closed: redirect to home on permission check error\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.redirect(new URL('/home', req.url));\n        }\n    }\n    return response;\n}\nconst config = {\n    matcher: [\n        /*\n     * Match all request paths except for the ones starting with:\n     * - _next/static (static files)\n     * - _next/image (image optimization files)\n     * - favicon.ico (favicon file)\n     * - public folder\n     */ '/((?!_next|favicon.ico|.*\\\\.(?:svg|png|jpg|jpeg|gif|webp|css|js|woff|woff2|ttf|eot)$).*)'\n    ]\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(middleware)/./src/middleware.ts\n");

/***/ })

});